<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>